<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>